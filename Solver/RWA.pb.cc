// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RWA.proto

#include "RWA.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_RWA_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RWA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RWA_Edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RWA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RWA_Traffic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RWA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RWA_TrafficOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RWA_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RWA_UndirectGraph;
}  // namespace protobuf_RWA_2eproto
namespace pb {
class RWA_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_Input>
      _instance;
} _RWA_Input_default_instance_;
class RWA_TrafficDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_Traffic>
      _instance;
} _RWA_Traffic_default_instance_;
class RWA_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_Output>
      _instance;
} _RWA_Output_default_instance_;
class RWA_TrafficOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_TrafficOut>
      _instance;
} _RWA_TrafficOut_default_instance_;
class RWA_UndirectGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_UndirectGraph>
      _instance;
} _RWA_UndirectGraph_default_instance_;
class RWA_EdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA_Edge>
      _instance;
} _RWA_Edge_default_instance_;
class RWADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RWA>
      _instance;
} _RWA_default_instance_;
class SubmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Submission>
      _instance;
} _Submission_default_instance_;
}  // namespace pb
namespace protobuf_RWA_2eproto {
static void InitDefaultsRWA_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_Input_default_instance_;
    new (ptr) ::pb::RWA_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RWA_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRWA_Input}, {
      &protobuf_RWA_2eproto::scc_info_RWA_UndirectGraph.base,
      &protobuf_RWA_2eproto::scc_info_RWA_Traffic.base,}};

static void InitDefaultsRWA_Traffic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_Traffic_default_instance_;
    new (ptr) ::pb::RWA_Traffic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_Traffic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RWA_Traffic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRWA_Traffic}, {}};

static void InitDefaultsRWA_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_Output_default_instance_;
    new (ptr) ::pb::RWA_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RWA_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRWA_Output}, {
      &protobuf_RWA_2eproto::scc_info_RWA_TrafficOut.base,}};

static void InitDefaultsRWA_TrafficOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_TrafficOut_default_instance_;
    new (ptr) ::pb::RWA_TrafficOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_TrafficOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RWA_TrafficOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRWA_TrafficOut}, {}};

static void InitDefaultsRWA_UndirectGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_UndirectGraph_default_instance_;
    new (ptr) ::pb::RWA_UndirectGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_UndirectGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RWA_UndirectGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRWA_UndirectGraph}, {
      &protobuf_RWA_2eproto::scc_info_RWA_Edge.base,}};

static void InitDefaultsRWA_Edge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_Edge_default_instance_;
    new (ptr) ::pb::RWA_Edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA_Edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RWA_Edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRWA_Edge}, {}};

static void InitDefaultsRWA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RWA_default_instance_;
    new (ptr) ::pb::RWA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RWA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RWA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRWA}, {}};

static void InitDefaultsSubmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Submission_default_instance_;
    new (ptr) ::pb::Submission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Submission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Submission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubmission}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_Traffic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_TrafficOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_UndirectGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA_Edge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RWA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Submission.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Input, graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Input, traffics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Traffic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Traffic, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Traffic, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Traffic, dst_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Output, traout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_TrafficOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_TrafficOut, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_TrafficOut, wave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_TrafficOut, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_UndirectGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_UndirectGraph, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_UndirectGraph, nodenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Edge, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA_Edge, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RWA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, ram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, compiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, date_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::RWA_Input)},
  { 7, -1, sizeof(::pb::RWA_Traffic)},
  { 15, -1, sizeof(::pb::RWA_Output)},
  { 21, -1, sizeof(::pb::RWA_TrafficOut)},
  { 29, -1, sizeof(::pb::RWA_UndirectGraph)},
  { 36, -1, sizeof(::pb::RWA_Edge)},
  { 43, -1, sizeof(::pb::RWA)},
  { 48, -1, sizeof(::pb::Submission)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_Traffic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_TrafficOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_UndirectGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_Edge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RWA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Submission_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "RWA.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tRWA.proto\022\002pb\"\323\002\n\003RWA\032P\n\005Input\022$\n\005grap"
      "h\030\001 \001(\0132\025.pb.RWA.UndirectGraph\022!\n\010traffi"
      "cs\030\002 \003(\0132\017.pb.RWA.Traffic\032/\n\007Traffic\022\n\n\002"
      "ID\030\001 \001(\005\022\013\n\003src\030\002 \001(\005\022\013\n\003dst\030\003 \001(\005\032,\n\006Ou"
      "tput\022\"\n\006traOut\030\001 \003(\0132\022.pb.RWA.TrafficOut"
      "\0324\n\nTrafficOut\022\014\n\004path\030\001 \003(\005\022\014\n\004wave\030\002 \001"
      "(\005\022\n\n\002ID\030\003 \001(\005\032=\n\rUndirectGraph\022\033\n\005edges"
      "\030\001 \003(\0132\014.pb.RWA.Edge\022\017\n\007nodeNum\030\002 \001(\005\032&\n"
      "\004Edge\022\016\n\006source\030\001 \001(\005\022\016\n\006target\030\002 \001(\005\"\350\001"
      "\n\nSubmission\022\016\n\006author\030\001 \001(\t\022\021\n\talgorith"
      "m\030\002 \001(\t\022\016\n\006thread\030\003 \001(\t\022\013\n\003cpu\030\004 \001(\t\022\013\n\003"
      "ram\030\005 \001(\t\022\020\n\010language\030\006 \001(\t\022\020\n\010compiler\030"
      "\007 \001(\t\022\n\n\002os\030\010 \001(\t\022\017\n\007problem\030\025 \001(\t\022\020\n\010in"
      "stance\030\026 \001(\t\022\020\n\010duration\030\027 \001(\t\022\013\n\003obj\030\037 "
      "\001(\001\022\r\n\005email\030  \001(\t\022\014\n\004date\030! \001(\tB\t\n\002pbB\003"
      "RWAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 611);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RWA.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_RWA_2eproto
namespace pb {

// ===================================================================

void RWA_Input::InitAsDefaultInstance() {
  ::pb::_RWA_Input_default_instance_._instance.get_mutable()->graph_ = const_cast< ::pb::RWA_UndirectGraph*>(
      ::pb::RWA_UndirectGraph::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_Input::kGraphFieldNumber;
const int RWA_Input::kTrafficsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_Input::RWA_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.Input)
}
RWA_Input::RWA_Input(const RWA_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      traffics_(from.traffics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_graph()) {
    graph_ = new ::pb::RWA_UndirectGraph(*from.graph_);
  } else {
    graph_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.RWA.Input)
}

void RWA_Input::SharedCtor() {
  graph_ = NULL;
}

RWA_Input::~RWA_Input() {
  // @@protoc_insertion_point(destructor:pb.RWA.Input)
  SharedDtor();
}

void RWA_Input::SharedDtor() {
  if (this != internal_default_instance()) delete graph_;
}

void RWA_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_Input::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_Input& RWA_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_Input.base);
  return *internal_default_instance();
}


void RWA_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  traffics_.Clear();
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
    delete graph_;
  }
  graph_ = NULL;
  _internal_metadata_.Clear();
}

bool RWA_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.RWA.UndirectGraph graph = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.RWA.Traffic traffics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_traffics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.Input)
  return false;
#undef DO_
}

void RWA_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.RWA.UndirectGraph graph = 1;
  if (this->has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_graph(), output);
  }

  // repeated .pb.RWA.Traffic traffics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traffics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->traffics(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.Input)
}

::google::protobuf::uint8* RWA_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.RWA.UndirectGraph graph = 1;
  if (this->has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_graph(), deterministic, target);
  }

  // repeated .pb.RWA.Traffic traffics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traffics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->traffics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.Input)
  return target;
}

size_t RWA_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.RWA.Traffic traffics = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->traffics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->traffics(static_cast<int>(i)));
    }
  }

  // .pb.RWA.UndirectGraph graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.Input)
    MergeFrom(*source);
  }
}

void RWA_Input::MergeFrom(const RWA_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  traffics_.MergeFrom(from.traffics_);
  if (from.has_graph()) {
    mutable_graph()->::pb::RWA_UndirectGraph::MergeFrom(from.graph());
  }
}

void RWA_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_Input::CopyFrom(const RWA_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_Input::IsInitialized() const {
  return true;
}

void RWA_Input::Swap(RWA_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_Input::InternalSwap(RWA_Input* other) {
  using std::swap;
  CastToBase(&traffics_)->InternalSwap(CastToBase(&other->traffics_));
  swap(graph_, other->graph_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_Input::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA_Traffic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_Traffic::kIDFieldNumber;
const int RWA_Traffic::kSrcFieldNumber;
const int RWA_Traffic::kDstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_Traffic::RWA_Traffic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_Traffic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.Traffic)
}
RWA_Traffic::RWA_Traffic(const RWA_Traffic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dst_) -
    reinterpret_cast<char*>(&id_)) + sizeof(dst_));
  // @@protoc_insertion_point(copy_constructor:pb.RWA.Traffic)
}

void RWA_Traffic::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_) -
      reinterpret_cast<char*>(&id_)) + sizeof(dst_));
}

RWA_Traffic::~RWA_Traffic() {
  // @@protoc_insertion_point(destructor:pb.RWA.Traffic)
  SharedDtor();
}

void RWA_Traffic::SharedDtor() {
}

void RWA_Traffic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_Traffic::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_Traffic& RWA_Traffic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_Traffic.base);
  return *internal_default_instance();
}


void RWA_Traffic::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.Traffic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_) -
      reinterpret_cast<char*>(&id_)) + sizeof(dst_));
  _internal_metadata_.Clear();
}

bool RWA_Traffic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.Traffic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dst = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.Traffic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.Traffic)
  return false;
#undef DO_
}

void RWA_Traffic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.Traffic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 src = 2;
  if (this->src() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src(), output);
  }

  // int32 dst = 3;
  if (this->dst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dst(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.Traffic)
}

::google::protobuf::uint8* RWA_Traffic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.Traffic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 src = 2;
  if (this->src() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src(), target);
  }

  // int32 dst = 3;
  if (this->dst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dst(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.Traffic)
  return target;
}

size_t RWA_Traffic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.Traffic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 src = 2;
  if (this->src() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src());
  }

  // int32 dst = 3;
  if (this->dst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_Traffic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.Traffic)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_Traffic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_Traffic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.Traffic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.Traffic)
    MergeFrom(*source);
  }
}

void RWA_Traffic::MergeFrom(const RWA_Traffic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.Traffic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.src() != 0) {
    set_src(from.src());
  }
  if (from.dst() != 0) {
    set_dst(from.dst());
  }
}

void RWA_Traffic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.Traffic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_Traffic::CopyFrom(const RWA_Traffic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.Traffic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_Traffic::IsInitialized() const {
  return true;
}

void RWA_Traffic::Swap(RWA_Traffic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_Traffic::InternalSwap(RWA_Traffic* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(src_, other->src_);
  swap(dst_, other->dst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_Traffic::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_Output::kTraOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_Output::RWA_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.Output)
}
RWA_Output::RWA_Output(const RWA_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      traout_(from.traout_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RWA.Output)
}

void RWA_Output::SharedCtor() {
}

RWA_Output::~RWA_Output() {
  // @@protoc_insertion_point(destructor:pb.RWA.Output)
  SharedDtor();
}

void RWA_Output::SharedDtor() {
}

void RWA_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_Output::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_Output& RWA_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_Output.base);
  return *internal_default_instance();
}


void RWA_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  traout_.Clear();
  _internal_metadata_.Clear();
}

bool RWA_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.RWA.TrafficOut traOut = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_traout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.Output)
  return false;
#undef DO_
}

void RWA_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RWA.TrafficOut traOut = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traout_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->traout(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.Output)
}

::google::protobuf::uint8* RWA_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RWA.TrafficOut traOut = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traout_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->traout(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.Output)
  return target;
}

size_t RWA_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.RWA.TrafficOut traOut = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->traout_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->traout(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.Output)
    MergeFrom(*source);
  }
}

void RWA_Output::MergeFrom(const RWA_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  traout_.MergeFrom(from.traout_);
}

void RWA_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_Output::CopyFrom(const RWA_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_Output::IsInitialized() const {
  return true;
}

void RWA_Output::Swap(RWA_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_Output::InternalSwap(RWA_Output* other) {
  using std::swap;
  CastToBase(&traout_)->InternalSwap(CastToBase(&other->traout_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_Output::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA_TrafficOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_TrafficOut::kPathFieldNumber;
const int RWA_TrafficOut::kWaveFieldNumber;
const int RWA_TrafficOut::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_TrafficOut::RWA_TrafficOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_TrafficOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.TrafficOut)
}
RWA_TrafficOut::RWA_TrafficOut(const RWA_TrafficOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wave_, &from.wave_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&wave_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:pb.RWA.TrafficOut)
}

void RWA_TrafficOut::SharedCtor() {
  ::memset(&wave_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&wave_)) + sizeof(id_));
}

RWA_TrafficOut::~RWA_TrafficOut() {
  // @@protoc_insertion_point(destructor:pb.RWA.TrafficOut)
  SharedDtor();
}

void RWA_TrafficOut::SharedDtor() {
}

void RWA_TrafficOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_TrafficOut::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_TrafficOut& RWA_TrafficOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_TrafficOut.base);
  return *internal_default_instance();
}


void RWA_TrafficOut::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.TrafficOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  ::memset(&wave_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&wave_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool RWA_TrafficOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.TrafficOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_path())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_path())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.TrafficOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.TrafficOut)
  return false;
#undef DO_
}

void RWA_TrafficOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.TrafficOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 path = 1;
  if (this->path_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _path_cached_byte_size_));
  }
  for (int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->path(i), output);
  }

  // int32 wave = 2;
  if (this->wave() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wave(), output);
  }

  // int32 ID = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.TrafficOut)
}

::google::protobuf::uint8* RWA_TrafficOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.TrafficOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 path = 1;
  if (this->path_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _path_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->path_, target);
  }

  // int32 wave = 2;
  if (this->wave() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wave(), target);
  }

  // int32 ID = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.TrafficOut)
  return target;
}

size_t RWA_TrafficOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.TrafficOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 path = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->path_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _path_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 wave = 2;
  if (this->wave() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wave());
  }

  // int32 ID = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_TrafficOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.TrafficOut)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_TrafficOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_TrafficOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.TrafficOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.TrafficOut)
    MergeFrom(*source);
  }
}

void RWA_TrafficOut::MergeFrom(const RWA_TrafficOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.TrafficOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  if (from.wave() != 0) {
    set_wave(from.wave());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RWA_TrafficOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.TrafficOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_TrafficOut::CopyFrom(const RWA_TrafficOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.TrafficOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_TrafficOut::IsInitialized() const {
  return true;
}

void RWA_TrafficOut::Swap(RWA_TrafficOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_TrafficOut::InternalSwap(RWA_TrafficOut* other) {
  using std::swap;
  path_.InternalSwap(&other->path_);
  swap(wave_, other->wave_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_TrafficOut::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA_UndirectGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_UndirectGraph::kEdgesFieldNumber;
const int RWA_UndirectGraph::kNodeNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_UndirectGraph::RWA_UndirectGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_UndirectGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.UndirectGraph)
}
RWA_UndirectGraph::RWA_UndirectGraph(const RWA_UndirectGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodenum_ = from.nodenum_;
  // @@protoc_insertion_point(copy_constructor:pb.RWA.UndirectGraph)
}

void RWA_UndirectGraph::SharedCtor() {
  nodenum_ = 0;
}

RWA_UndirectGraph::~RWA_UndirectGraph() {
  // @@protoc_insertion_point(destructor:pb.RWA.UndirectGraph)
  SharedDtor();
}

void RWA_UndirectGraph::SharedDtor() {
}

void RWA_UndirectGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_UndirectGraph::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_UndirectGraph& RWA_UndirectGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_UndirectGraph.base);
  return *internal_default_instance();
}


void RWA_UndirectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_.Clear();
  nodenum_ = 0;
  _internal_metadata_.Clear();
}

bool RWA_UndirectGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.UndirectGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.RWA.Edge edges = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nodeNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.UndirectGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.UndirectGraph)
  return false;
#undef DO_
}

void RWA_UndirectGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RWA.Edge edges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->edges(static_cast<int>(i)),
      output);
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.UndirectGraph)
}

::google::protobuf::uint8* RWA_UndirectGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RWA.Edge edges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.UndirectGraph)
  return target;
}

size_t RWA_UndirectGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.UndirectGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.RWA.Edge edges = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nodenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_UndirectGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.UndirectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_UndirectGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_UndirectGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.UndirectGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.UndirectGraph)
    MergeFrom(*source);
  }
}

void RWA_UndirectGraph::MergeFrom(const RWA_UndirectGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.UndirectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  edges_.MergeFrom(from.edges_);
  if (from.nodenum() != 0) {
    set_nodenum(from.nodenum());
  }
}

void RWA_UndirectGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.UndirectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_UndirectGraph::CopyFrom(const RWA_UndirectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.UndirectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_UndirectGraph::IsInitialized() const {
  return true;
}

void RWA_UndirectGraph::Swap(RWA_UndirectGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_UndirectGraph::InternalSwap(RWA_UndirectGraph* other) {
  using std::swap;
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  swap(nodenum_, other->nodenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_UndirectGraph::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA_Edge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RWA_Edge::kSourceFieldNumber;
const int RWA_Edge::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA_Edge::RWA_Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA_Edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA.Edge)
}
RWA_Edge::RWA_Edge(const RWA_Edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_) -
    reinterpret_cast<char*>(&source_)) + sizeof(target_));
  // @@protoc_insertion_point(copy_constructor:pb.RWA.Edge)
}

void RWA_Edge::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&source_)) + sizeof(target_));
}

RWA_Edge::~RWA_Edge() {
  // @@protoc_insertion_point(destructor:pb.RWA.Edge)
  SharedDtor();
}

void RWA_Edge::SharedDtor() {
}

void RWA_Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA_Edge::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA_Edge& RWA_Edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA_Edge.base);
  return *internal_default_instance();
}


void RWA_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&source_)) + sizeof(target_));
  _internal_metadata_.Clear();
}

bool RWA_Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA.Edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA.Edge)
  return false;
#undef DO_
}

void RWA_Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->source(), output);
  }

  // int32 target = 2;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA.Edge)
}

::google::protobuf::uint8* RWA_Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->source(), target);
  }

  // int32 target = 2;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA.Edge)
  return target;
}

size_t RWA_Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA.Edge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 target = 2;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA_Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA_Edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA_Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA.Edge)
    MergeFrom(*source);
  }
}

void RWA_Edge::MergeFrom(const RWA_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
}

void RWA_Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA_Edge::CopyFrom(const RWA_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA_Edge::IsInitialized() const {
  return true;
}

void RWA_Edge::Swap(RWA_Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA_Edge::InternalSwap(RWA_Edge* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA_Edge::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RWA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RWA::RWA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_RWA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RWA)
}
RWA::RWA(const RWA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RWA)
}

void RWA::SharedCtor() {
}

RWA::~RWA() {
  // @@protoc_insertion_point(destructor:pb.RWA)
  SharedDtor();
}

void RWA::SharedDtor() {
}

void RWA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RWA::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RWA& RWA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_RWA.base);
  return *internal_default_instance();
}


void RWA::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RWA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RWA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RWA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RWA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RWA)
  return false;
#undef DO_
}

void RWA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RWA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RWA)
}

::google::protobuf::uint8* RWA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RWA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RWA)
  return target;
}

size_t RWA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RWA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RWA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RWA)
  GOOGLE_DCHECK_NE(&from, this);
  const RWA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RWA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RWA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RWA)
    MergeFrom(*source);
  }
}

void RWA::MergeFrom(const RWA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RWA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RWA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RWA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RWA::CopyFrom(const RWA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RWA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RWA::IsInitialized() const {
  return true;
}

void RWA::Swap(RWA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RWA::InternalSwap(RWA* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RWA::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Submission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Submission::kAuthorFieldNumber;
const int Submission::kAlgorithmFieldNumber;
const int Submission::kThreadFieldNumber;
const int Submission::kCpuFieldNumber;
const int Submission::kRamFieldNumber;
const int Submission::kLanguageFieldNumber;
const int Submission::kCompilerFieldNumber;
const int Submission::kOsFieldNumber;
const int Submission::kProblemFieldNumber;
const int Submission::kInstanceFieldNumber;
const int Submission::kDurationFieldNumber;
const int Submission::kObjFieldNumber;
const int Submission::kEmailFieldNumber;
const int Submission::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Submission::Submission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RWA_2eproto::scc_info_Submission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Submission)
}
Submission::Submission(const Submission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithm().size() > 0) {
    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thread().size() > 0) {
    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram().size() > 0) {
    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compiler().size() > 0) {
    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.os().size() > 0) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.problem().size() > 0) {
    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance().size() > 0) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  obj_ = from.obj_;
  // @@protoc_insertion_point(copy_constructor:pb.Submission)
}

void Submission::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
}

Submission::~Submission() {
  // @@protoc_insertion_point(destructor:pb.Submission)
  SharedDtor();
}

void Submission::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Submission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Submission::descriptor() {
  ::protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Submission& Submission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RWA_2eproto::scc_info_Submission.base);
  return *internal_default_instance();
}


void Submission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
  _internal_metadata_.Clear();
}

bool Submission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Submission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm().data(), static_cast<int>(this->algorithm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.algorithm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thread()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thread().data(), static_cast<int>(this->thread().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.thread"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram().data(), static_cast<int>(this->ram().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.ram"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compiler = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiler()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compiler().data(), static_cast<int>(this->compiler().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.compiler"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string os = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string problem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_problem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->problem().data(), static_cast<int>(this->problem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.problem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.instance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Submission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Submission)
  return false;
#undef DO_
}

void Submission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->algorithm(), output);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thread(), output);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpu(), output);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ram(), output);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->language(), output);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->compiler(), output);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->os(), output);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->problem(), output);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->instance(), output);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->duration(), output);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->obj(), output);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->email(), output);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Submission)
}

::google::protobuf::uint8* Submission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->algorithm(), target);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thread(), target);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cpu(), target);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ram(), target);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->language(), target);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->compiler(), target);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->os(), target);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->problem(), target);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->instance(), target);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->duration(), target);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->obj(), target);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->email(), target);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Submission)
  return target;
}

size_t Submission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Submission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm());
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thread());
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram());
  }

  // string language = 6;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());
  }

  // string os = 8;
  if (this->os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->os());
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->problem());
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance());
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  // string email = 32;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string date = 33;
  if (this->date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // double obj = 31;
  if (this->obj() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Submission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  const Submission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Submission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Submission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Submission)
    MergeFrom(*source);
  }
}

void Submission::MergeFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.algorithm().size() > 0) {

    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  if (from.thread().size() > 0) {

    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.ram().size() > 0) {

    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.compiler().size() > 0) {

    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  if (from.os().size() > 0) {

    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  if (from.problem().size() > 0) {

    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.obj() != 0) {
    set_obj(from.obj());
  }
}

void Submission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Submission::CopyFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Submission::IsInitialized() const {
  return true;
}

void Submission::Swap(Submission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Submission::InternalSwap(Submission* other) {
  using std::swap;
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  algorithm_.Swap(&other->algorithm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thread_.Swap(&other->thread_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ram_.Swap(&other->ram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  compiler_.Swap(&other->compiler_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  problem_.Swap(&other->problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_, other->obj_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Submission::GetMetadata() const {
  protobuf_RWA_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RWA_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_Input* Arena::CreateMaybeMessage< ::pb::RWA_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_Traffic* Arena::CreateMaybeMessage< ::pb::RWA_Traffic >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_Traffic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_Output* Arena::CreateMaybeMessage< ::pb::RWA_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_TrafficOut* Arena::CreateMaybeMessage< ::pb::RWA_TrafficOut >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_TrafficOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_UndirectGraph* Arena::CreateMaybeMessage< ::pb::RWA_UndirectGraph >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_UndirectGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA_Edge* Arena::CreateMaybeMessage< ::pb::RWA_Edge >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA_Edge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RWA* Arena::CreateMaybeMessage< ::pb::RWA >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RWA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Submission* Arena::CreateMaybeMessage< ::pb::Submission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Submission >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
